stages:
  - build
  - test
  - package

# determine conan recipe string from CI_COMMIT_TAG
create_variables:
  stage: .pre
  variables:
    # safe default variables here
    CONAN_RECIPE_NAME:    $CI_PROJECT_NAME
    CONAN_RECIPE_VERSION: $CI_COMMIT_SHORT_SHA
    CONAN_RECIPE_USER:    $CI_PROJECT_NAMESPACE+$CI_PROJECT_NAME
    CONAN_RECIPE_CHANNEL: 2.16.4
  script:
    - |
      # if this is a tagged pipeline and a '-' is found in the tag ...
      if [[ "$CI_COMMIT_TAG" =~ "-" ]]; then
        # package version is first part before the '-'
        CONAN_RECIPE_VERSION="${CI_COMMIT_TAG%-*}"
        # karabo version is second part after the '-'
        CONAN_RECIPE_CHANNEL="${CI_COMMIT_TAG#*-}"
        KARABO_TAG=$CONAN_RECIPE_CHANNEL
      fi
      # pass environment variables on to next step via artifacts:reports:dotenv
      echo "CONAN_RECIPE_NAME=$CONAN_RECIPE_NAME" >> dotenv.txt
      echo "CONAN_RECIPE_VERSION=$CONAN_RECIPE_VERSION" >> dotenv.txt
      echo "CONAN_RECIPE_USER=$CONAN_RECIPE_USER" >> dotenv.txt
      echo "CONAN_RECIPE_CHANNEL=$CONAN_RECIPE_CHANNEL" >> dotenv.txt
      echo "CONAN_RECIPE=$CONAN_RECIPE_NAME/$CONAN_RECIPE_VERSION@$CONAN_RECIPE_USER/$CONAN_RECIPE_CHANNEL" >> dotenv.txt
      # dump variables to CI output
      cat dotenv.txt
  artifacts:
    reports:
      dotenv: dotenv.txt

# define common actions for the build/test/package environment
.conan_setup_script:
  cache:
    paths:
      - conan_cache_dir/
    policy: pull-push
  variables:
    CONAN_USER_HOME:     $CI_PROJECT_DIR/conan_cache_dir
    KARABO_TAG:          $CONAN_RECIPE_CHANNEL
  before_script:
    - lsb_release -a
    # setup conan build profile
    - conan profile new default --detect || true > /dev/null
    - conan profile update settings.compiler.libcxx=libstdc++11 default
    # setup conan and add XFEL gitlab package registry
    - conan remote add gitlab $CI_API_V4_URL/packages/conan || true
    - conan user -p $CI_JOB_TOKEN --remote=gitlab gitlab-ci-token
    # install karabo framework from conan package
    # - conan install karaboFramework/$KARABO_TAG@karaboDevices+depends/any --install-folder $HOME/karabo --remote=gitlab > /dev/null
    # - source $HOME/karabo/activate
    # - pushd $CI_PROJECT_DIR


# build template
.build_template: &build_it
  stage: build
  extends: .conan_setup_script
  script:
    # commands for conan to collect dependencies and build a karabo device
    - conan remove $CONAN_RECIPE_NAME -f || true
    - conan create . $CONAN_RECIPE -pr:b=default -s build_type=Release --build=missing --test-folder=None
    # clean up build directories from conan cache
    - conan remove "*" -b -f

# test template
.test_template: &test_it
  stage: test
  extends: .conan_setup_script
  variables:
    KARABO_BROKER_TOPIC: "gitlab_ci_$CI_JOB_ID"
  script:
    # provide libnssutil3.so
    - sudo apt-get update
    - sudo apt-get -qq install -y --no-install-recommends --no-install-suggests libnss3-tools
    # build and run the test executables in the src/test directory
    - conan create . $CONAN_RECIPE -pr:b=default -s build_type=Release --build=missing --test-folder=None
    - export GTEST_OUTPUT=xml:$CI_PROJECT_DIR/report.xml
    - conan test src/test/. $CONAN_RECIPE
  artifacts:
    when: always
    paths:
      - report.xml
    reports:
      junit:
        - report.xml
    expire_in: 8 weeks

# package template
.package_template: &package_it
  stage: package
  extends: .conan_setup_script
  script:
    # push compiled karabo device package back to gitlab registry
    - conan create . $CONAN_RECIPE -pr:b=default -s build_type=Release --build=missing --test-folder=None
    - conan upload $CONAN_RECIPE --all --remote=gitlab --confirm
  only:
    - tags
  # conan packages from this stage are not pushed back to cache
  cache:
    policy: pull


##### x86_64-ubuntu 20 #####
build:x86_64-ubuntu:
  image: conanio/gcc9:1.59.0
  <<: *build_it

test:x86_64-ubuntu:
  image: conanio/gcc9:1.59.0
  <<: *test_it

package:x86_64-ubuntu:
  image: conanio/gcc9:1.59.0
  <<: *package_it


# test:ubuntu20:
#   image: europeanxfel/karabo-ci:ubuntu-20
#   <<: *test_build

# test:centos7:
#   image: conanio/gcc72
#   <<: *test_build
